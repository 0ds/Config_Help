Return Code:-
What exit code should I use?

The Linux Documentation Project has a list of reserved codes that also offers advice on what code to use for specific scenarios. These are the standard error codes in Linux or UNIX.
    0   - Successfull
    1   - Catchall for general errors
    2   - Misuse of shell builtins (according to Bash documentation)
    126 - Command invoked cannot execute
    127 - “command not found”
    128 - Invalid argument to exit
    128+n - Fatal error signal “n”
    130 - Script terminated by Control-C
    255\* - Exit status out of range
-------------------------------------------------------------------------------------------------------------    
$?       

$? is used to find the return value of the last executed command. Try the following in the shell:
  $ ls somefile
  $echo $?
  
Basically it returns error code as out put
0 ->Successful 
1 ,,,,..........................

Shell Script:-
1. to check wheather a script runs or not

 #!/bin/bash

cat file.txt 

if [ $? -eq 0 ]
then
  echo "The script ran ok"
  exit 0
else
  echo "The script failed" >&2
  exit 1
fi

* If the cat command fails an OR operation can be used to provide a fallback - cat file.txt || exit 0 In this case 
  an exit code of 0 is returned even if there is an error.
  
  #!/bin/bash
  cat 'doesnotexist.txt' 2>/dev/null || exit 0
  
